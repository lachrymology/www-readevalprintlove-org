# Ur-Lisp

In 1980 John McCarthy wrote a paper entitled *[LISP - Notes on its past and future](http://www-formal.stanford.edu/jmc/lisp20th.html)* for Stanford's Lisp conference that year.  With in the paper he listed fifteen points that he claimed characterized LISP:

As a programming language, LISP is characterized by the following ideas:

  1. Computing with symbolic expressions rather than numbers.
  
  2. Representation of symbolic expressions and other information by
     list structure in computer memory.
	 
  3. Representation of information on paper, from keyboards and in
     other external media mostly by multi-level lists and sometimes by
     S-expressions. It has been important that any kind of data can be 
     represented by a single general type.
	 
  4. A small set of selector and constructor operations expressed as
     functions, i.e. car, cdr and cons.
	 
  5. Composition of functions as a tool for forming more complex
     functions.
	
  6. The use of conditional expressions for getting branching into
     function definitions.

  7. The recursive use of conditional expressions as a sufficient tool
     for building computable functions.

  8. The use of Î»-expressions for naming functions.

  9. The storage of information on the property lists of atoms.
  
 10. The representation of LISP programs as LISP data that can be
     manipulated by object programs. This has prevented the separation
	 between system programmers and application programmers. Everyone
	 can ``improve'' his LISP, and many of these ``improvements'' have
	 developed into improvements to the language.

 11. The conditional expression interpretation of Boolean connectives.
 
 12. The LISP function eval that serves both as a formal definition of
     the language and as an interpreter.
	 
 13. Garbage collection as the means of erasure.
 
 14. Minimal requirements for declarations so that LISP statements can
     be executed in an on-line environment without preliminaries.
	 
 15. LISP statements as a command language in an on-line environment.

<insert 32-lines>

<insert "stop making minimal lisps">

